######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
library(rbern)
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 = rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 = rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob = e(X) #Treatment Probability
W = rbern(n, prob) #Assign treatment randomly based on e
df = cbind(Y0, Y1, W, X)
return(df)
}
generate_data(10,2,m1,t1,e1)
#Author: Alden Porter
#This code constructs functions for generating the simulation data for Athey(2017)
######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
library(stats)
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 = rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 = rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob = e(X) #Treatment Probability
W = rbern(n, prob) #Assign treatment randomly based on e
df = cbind(Y0, Y1, W, X)
return(df)
}
generate_data(10,2,m1,t1,e1)
#Author: Alden Porter
#This code constructs functions for generating the simulation data for Athey(2017)
######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
#library(stats)
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 = rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 = rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob = e(X) #Treatment Probability
W = rbinom(n,1,prob)#Assign treatment randomly based on e
df = cbind(Y0, Y1, W, X)
return(df)
}
generate_data(10,2,m1,t1,e1)
#Author: Alden Porter
#This code constructs functions for generating the simulation data for Athey(2017)
######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 <- rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 <- rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob <- e(X) #Treatment Probability
W <- rbinom(n,1,prob)#Assign treatment randomly based on e
df <- cbind(Y0, Y1, W, X)
return(df)
}
generate_data(10,2,m1,t1,e1)
#Author: Alden Porter
#This code constructs functions for generating the simulation data for Athey(2017)
######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 <- rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 <- rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob <- e(X) #Treatment Probability
W <- rbinom(n,1,prob)#Assign treatment randomly based on e
Y = W*Y1 + (1-W)*Y0 #Observed Y
df <- cbind(Y, Y0, Y1, W, X)
return(df)
}
generate_data(10,2,m1,t1,e1)
#Author: Alden Porter
#This code constructs functions for generating the simulation data for Athey(2017)
######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 <- rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 <- rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob <- e(X) #Treatment Probability
W <- rbinom(n,1,prob)#Assign treatment randomly based on e
Y = W*Y1 + (1-W)*Y0 #Observed
df <- cbind(Y, Y0, Y1, prob, W, X)
return(df)
}
generate_data(10,2,m1,t1,e1)
sim_dat <- generate_data(10,2,m1,t1,e1)
sim_dat$W
#Author: Alden Porter
#This code constructs functions for generating the simulation data for Athey(2017)
######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 <- rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 <- rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob <- e(X) #Treatment Probability
W <- rbinom(n,1,prob) #Assign treatment randomly based on e
Y = W*Y1 + (1-W)*Y0 #Observed Outcome
df <- data.frame( cbind(Y, Y0, Y1, W, X)
#Author: Alden Porter
#This code constructs functions for generating the simulation data for Athey(2017)
######################################################################################
######################################################################################
# Clear data
######################################################################################
rm(list=ls(all=TRUE))
######################################################################################
# Define m,t, and e functions
######################################################################################
###Generic Stuff
sigmoid <- function(x,a,b){
result <- (1+exp(-a*(x-b)))^-1
return(result)
}
###First Experiment
m1 <- function(x){
return(2*x[,1] + 1)
}
t1 <- function(x){
return(0)
}
e1 <- function(x){
result <- 1/4 * (1+dbeta(x[,1], 2, 4, ncp = 0, log = FALSE))
return(result)
}
###Second Experiment
m2 <- function(x){
return(0)
}
t2 <- function(x){
result <- ( 1 + sigmoid(x[,1],20,1/3) )*( 1 + sigmoid(x[,2],20,1/3) )
return(result)
}
e2 <- function(x){
return(.5)
}
######################################################################################
# Define the Actual Generate Data Function
######################################################################################
generate_data <- function(n, d, m, t, e){
X <- matrix(runif(n*d, min = 0, max = 1), nrow=n, ncol=d, byrow = FALSE) # Generate a nxd matrix of U[0,1] numbers
EY1 <- 2*m(X) - t(X) #Get the expected value of Y1
EY0 <- 2*m(X) + t(X) #Get the expected value of Y0
Y0 <- rnorm(n, mean = EY0, sd = 1) #Compute Actual Values of Y1
Y1 <- rnorm(n, mean = EY1, sd = 1) #Compute Actual Values of Y0
prob <- e(X) #Treatment Probability
W <- rbinom(n,1,prob) #Assign treatment randomly based on e
Y = W*Y1 + (1-W)*Y0 #Observed Outcome
df <- data.frame( cbind(Y, Y0, Y1, W, X) )
return(df)
}
sim_dat <- generate_data(10,2,m1,t1,e1)
sim_dat$W
sim_dat[,5:length(sim_dat)]
sim_dat[,5:]
sim_dat[,5:-1]
sim_dat[,5:width(sim_dat)]
sim_dat[,5:dim(sim_dat)[2]]
sim_dat[,5:dim(sim_dat)[1]]
#Author: Alden Porter
#This script performs the actual experiment found in Athey (2017)
######################################################################################
# Clear data, import functions
######################################################################################
rm(list=ls(all=TRUE))
source("A_data_generation.R")
library(causalTree)
library(FNN)
library(randomForestCI)
######################################################################################
# Experiment 1
######################################################################################
run_experiment <- function(n, D, m, t, e)
#n: Number of observations
#D: Vector of the number of columns
#m: main effect function
#t: treatment effect function
#e: treatment propensity function
for (d in D){
sim_data_full <- generate_data(n, d, m, t, e) #generate the data
#Create a dataframe with only Y, W, and X
drops <- c("Y0","Y1")
sim_data = sim_data_full[ , !(names(DF) %in% drops)]
#    cf <- causalForest( , data = sim_data, treatment = sim_data$W, sim_data)
return(sim_data)
}
causalForest()
#Author: Alden Porter
#This script performs the actual experiment found in Athey (2017)
######################################################################################
# Clear data, import functions
######################################################################################
rm(list=ls(all=TRUE))
source("A_data_generation.R")
library(causalTree)
library(FNN)
library(randomForestCI)
######################################################################################
# Experiment 1
######################################################################################
run_experiment <- function(n, D, m, t, e)
#n: Number of observations
#D: Vector of the number of columns
#m: main effect function
#t: treatment effect function
#e: treatment propensity function
for (d in D){
sim_data_full <- generate_data(n, d, m, t, e) #generate the data
#Create a dataframe with only Y, W, and X
drops <- c("Y0","Y1")
sim_data = sim_data_full[ , !(names(DF) %in% drops)]
#    cf <- causalForest( , data = sim_data, treatment = sim_data$W, sim_data)
return(sim_data)
}
run_experiment(10,c(2), m2, t2, e2)
#Author: Alden Porter
#This script performs the actual experiment found in Athey (2017)
######################################################################################
# Clear data, import functions
######################################################################################
rm(list=ls(all=TRUE))
source("A_data_generation.R")
library(causalTree)
library(FNN)
library(randomForestCI)
######################################################################################
# Experiment 1
######################################################################################
run_experiment <- function(n, D, m, t, e)
#n: Number of observations
#D: Vector of the number of columns
#m: main effect function
#t: treatment effect function
#e: treatment propensity function
for (d in D){
sim_data_full <- generate_data(n, d, m, t, e) #generate the data
#Create a dataframe with only Y, W, and X
drops <- c("Y0","Y1")
sim_data = sim_data_full[ , !(names(sim_data_full) %in% drops)]
#    cf <- causalForest( , data = sim_data, treatment = sim_data$W, sim_data)
return(sim_data)
}
run_experiment(10,c(2), m2, t2, e2)
causalForest()
